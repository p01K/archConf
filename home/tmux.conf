# Increase history limit
set-option -g history-limit 50000

# enable scrolling with shift page up/down
#set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# To avoid weird arrow behaviour in Vim
set-option -g default-terminal "screen-256color"

unbind C-b
set-option -g prefix C-z
bind-key C-z send-prefix

# Breaks it instead of fixing...
set-window-option -g xterm-keys on

# pane switching with Control-Shift
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# Set titles
set-option -g set-titles on
set-option -g set-titles-string "#T"
# change host to red if we're remote
if-shell 'test "$SSH_CONNECTION"' 'set-option -g set-titles-string "#[fg=red]#T"'


# Configure right status bar
#set-option -g status-right "##[fg=red,dim,bg=default]#(uptime | cut -d "," -f1| cut -d "p" -f2-3) #[fg=colour7,bold]| #[fg=green,dim,bg=default]#(top -b -n1 | grep 'Cpu' |awk '{print 100-$8 \"\%\"}') #[fg=colour7,bold]| #[fg=colour81]#(sensors |grep 'Core '|awk '{print \"[\"$3\"] \"}'|tr -d '\n')#[fg=colour7,bold]| #(date +'%H:%M %d-%b-%y') #[default]"
#set-option -g status-right "##[fg=red,dim,bg=default]#(uptime | cut -d "," -f1| cut -d "p" -f2-3) #[fg=colour7,bold]| #[fg=green,dim,bg=default]#(uptime | cut -d "," -f3-6 | cut -d ":" -f2) #[fg=colour7,bold]| #[fg=colour81]#(sensors |grep 'Core '|awk '{print \"[\"$3\"] \"}'|tr -d '\n')#[fg=colour7,bold]| #(date +'%H:%M %d-%b-%y') #[default]"
set-option -g status-right "#[fg=red,dim,bg=default]#(uptime | cut -d "," -f1| cut -d "p" -f2-3) #[fg=colour7,bold]| #[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=colour7,bold]| #[fg=colour81]#(sensors |grep 'Core '|awk '{print \"[\"$3\"] \"}'|tr -d '\n')#[fg=colour7,bold]| #(date +'%H:%M %d-%b-%y') #[default]"
set-option -g status-right-length 100

# lower escape timing
set-option -s escape-time 0

# center status bar
#set-option -g status-justify centre

# pane border
set-option -g pane-active-border-fg colour81
set-option -g pane-border-fg colour81

# change status bar format
setw -g automatic-rename on
#set-window-option -g window-status-format '#[fg=colour81]\#[underscore] #I.#{pane_current_path} #[default]#[fg=colour81]/#[default]'
setw -g window-status-format '#[fg=colour81]\#[underscore] #I.#{pane_current_path} #[default]#[fg=colour81]/#[default]'
#set-window-option -g window-status-current-format '#[fg=colour81,bold]\#[underscore] #I.#W #[default]#[fg=colour81,bold]/#[default]'
setw -g window-status-current-format '#[fg=colour81,bold]\#[underscore] #I.#{pane_current_path} #[default]#[fg=colour81,bold]/#[default]'

# Status bar has a dim gray background
set-option -g status-bg colour235

# Make mouse useful in copy mode
set-window-option -g mode-mouse on
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-utf8 on
set-option -g mouse-resize-pane on

# Enable automatic window renaming
set-window-option -g automatic-rename on

# Enable utf8 support
set-window-option -g utf8 on

# Minimize resizing when other termijnals are inactive
set-window-option -g aggressive-resize on

# vim like pane switch
bind b select-pane -R

# Toggle mouse on with ^B M
bind M set-option -g mode-mouse on\; set-option -g mouse-resize-pane on\; set-option -g mouse-select-pane on\; set-option -g mouse-select-window on\; display 'Mouse: ON'

# Toggle mouse off with ^B m
bind m set-option -g mode-mouse off\; set-option -g mouse-resize-pane off\; set-option -g mouse-select-pane off\; set-option -g mouse-select-window off\; display 'Mouse: OFF'

# focus to pane
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'\; swap-pane -s tmux-zoom.0\; select-window -t tmux-zoom

# revert to normal view
unbind -
bind - last-window\; swap-pane -s tmux-zoom.0\; kill-window -t tmux-zoom

# Move copy buffer to clipboard
if 'test `which xclip`' 'bind C-c run "tmux show-buffer | xclip -i -selection clipboard"\; display "Buf copied to clipboard"'

# More straight forward key bindings for splitting
unbind %
bind \ split-window -h
bind | split-window -h
bind h split-window -h
unbind '"'
bind _ split-window -v
bind - split-window -v
bind v split-window -v

# Detach
bind-key -n C-x detach
#if-shell 'test "$SSH_CONNECTION"' 'bind-key -n C-D detach'

# New Session
bind-key C-n new-session
bind-key C-N new-session

# New Window
bind-key -n C-N new-window
bind-key -n C-n new-window

# quick view of processes
bind '!' split-window -h "exec htop"
bind '~' split-window -v "exec htop"
bind '@' split-window -h\; split-window "exec htop"

# toggle next and previous window
bind-key -n C-right next-window
bind-key -n C-left previous-window

# toggle last window like screen
bind-key C-a last-window

# toggle attach-session
#bind-key A-0 attach-session -t 0
#bind-key A-1 attach-session -t 1
#bind-key a-2 attach-session -t 2
#bind-key a-3 attach-session -t 3
#bind-key a-4 attach-session -t 4
#bind-key a-5 attach-session -t 5
#bind-key a-6 attach-session -t 6
#bind-key a-7 attach-session -t 7
#bind-key a-8 attach-session -t 8
#bind-key a-9 attach-session -t 9

# Reload this file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind R source-file ~/.tmux.conf \; display "Reloaded!"
